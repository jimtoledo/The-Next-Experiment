pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--main functions--
function _init()
	palt(0,false)
	palt(14,true)
	--p_x and p_y are the indexes of the room arrays
	p_x=2
	p_y=5
	--p_dx and p_dy are only -1,0,1
	p_dx=0
	p_dy=0
	p_spr=76
	p_dir=76 --player sprite to be displayed
	p_movecounter=0 --for walking animation
	p_walkanimation=0 --for walking animation (0 or 1)
	p_moving=false

	state = 6

	curr_key_item=-1 --sprite number for current key item (-1 for no item)
	collected_pieces = {} --sprite numbers for collected puzzle pieces (letters)
	d =false
	j =false
	z= false
	c =false
	
	controls = false
	
	lights = true
	
	mech_room_init()
	lab_room_init()
end

function _update()
	player_move()
	if state == 7 then
		laser_con()
	elseif state == 8 then
		chem_con()
	elseif btnp(5) then
		if not p_moving then
			add_inventory()
		end
		if not controls and state < 5 then
			controls =true
		end
		if state == 5 then
			state = 6
			_init()
		elseif state == 6 then
			state = 1
			start_time = time()
		end
	end
end

function _draw()
	if state == 1 then
		main_room_draw()
	elseif state == 2 then
		lab_room_draw()
	elseif state == 3 then
		serv_room_draw()
	elseif state == 4 then
		mech_room_draw()
	elseif state == 5 then
		win_draw()
	elseif state == 6 then
		intro_draw()
	elseif state == 7 then
		laser_draw()
	elseif state == 8 then
		chem_draw()
	end
	
	if state < 5 or state>=7 then
		if state < 5 then
			inv_display()
			if not controls then
			print("⬅️⬇️⬆️➡️:move\n❎:interact",75,112,7)
			end
			if btn(5) then 
				puzzle_select() 
				win_check()
			end
		end
		runtime = game_timer()
		print(runtime,2,2,7)
	end
end
-->8
--destiny--
--main entryway, 16x16--
mainroom = {
	{1,2,1,2,1,2,1,4,5,2,1,2,1,2,1,2},
	{17,18,17,18,17,18,17,20,21,18,17,18,17,18,17,18},
	{3,3,3,3,3,3,3,36,37,3,3,3,3,3,3,3},
	{19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
	{102,19,19,19,19,19,19,19,19,19,19,19,19,19,19,101},
	{19,19,19,19,19,19,19,6,7,8,19,19,19,19,19,19},
	{19,19,19,19,19,19,19,22,23,24,19,19,19,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
	{35,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
	{51,19,19,19,19,19,19,19,19,19,19,19,19,19,19,25},
	{19,19,19,19,19,19,19,19,19,19,19,19,38,39,40,41},
	{19,19,19,19,19,19,19,19,19,19,19,19,54,55,56,41},
	{19,19,19,19,19,19,19,33,34,19,19,19,19,19,19,57},
	{19,19,19,19,19,19,19,49,50,19,19,19,19,19,19,19}
}

function main_room_draw()
	cls(0)
	draw_room(mainroom)
end


-->8
--jimbob--
function lab_room_init()
	labroom={
	{100,100,100,71,72,100,100,100,100,100,100,100},
	{100,100,100,87,88,68,69,70,100,100,100,100},
	{19,19,19,19,19,84,85,86,19,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19},
	{19,19,19,112,113,114,115,116,117,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19},
	{19,19,19,64,65,19,19,82,83,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19},
	{19,19,19,66,67,19,19,80,81,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19},
	{19,19,19,96,97,19,19,98,99,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19}}
	
	chem_sol={1,8,11,12,13,10} --numbers represent colors of chemicals
	chem_mix={}
end

function lab_room_draw()
	cls(0)
	draw_room(labroom)
end

function chem_con()
	
end

function chem_draw()
	cls(0)
	chem_con_draw()
end

function chem_con_draw()
	rect(14,104,114,127,7)
	print("mix the chemicals in the\ncorrect order to concoct\na useful item",17,107,7)
	print("⬆️\n\n⬇️\n\n⬅️\n\n➡️\n\nz\n\nx",3,33,7)
	for i=1,6 do
		spr(117+i,12,12*i+21)
	end
		sspr(72,32,8,8,28,16,84,84)
end
-->8
--carly--
--sprite sheet 2
servroom= {
	{154,154,154,154,154,154,154,154,157,154,154},
	{132,133,155,155,155,131,135,131,158,131,137},
	{130,130,147,147,147,148,151,148,136,148,134},
	{139,140,147,147,147,147,147,147,147,147,150},
	{147,147,147,147,147,147,147,147,147,147,147},
	{128,147,147,147,153,144,147,147,147,147,147},
	{141,147,147,147,145,146,142,147,147,147,147},
	{102,147,147,147,147,147,147,147,147,147,147}
}

function serv_room_draw()
	cls()
	draw_room(servroom)
end
-->8
--zoe--
function mech_room_init()
	sel = {}
	sel.color = 213
	sel.x = 3
	sel.y = 5
	sel.dir = "none"
	mechroom = {
	{192,192,193,192,194,195},
	{192,192,209,192,210,211},
	{208,208,208,208,224,225},
	{208,208,208,208,208,208},
	{208,208,208,208,208,101},
	{208,208,208,208,208,208},
	{208,208,208,208,208,208},
	{212,208,208,208,196,197}}
	
	laser_puz = {
	{208,208,208,208,208},
	{208,230,208,208,208},
	{208,208,208,208,208},
	{208,208,208,208,208},
	{208,208,208,208,208},
	{208,208,208,198,208},
	{208,208,208,208,208},
	{208,208,198,208,246},
	{208,208,214,208,208},
	{214,230,246,208,208}}
	
	puz_ans = {
	{218,215,215,215,217},
	{216,230,202,201,216},
	{216,232,200,200,216},
	{216,232,200,200,216},
	{216,232,200,200,216},
	{216,232,200,198,216},
	{216,232,200,218,220},
	{216,232,198,216,246},
	{216,232,214,220,248},
	{214,230,246,247,252}}
end
	
function mech_room_draw()
	cls()
	draw_room(mechroom)
end

function laser_draw()
	cls()
	x =64-((#laser_puz[1]/2)*8)
 y = 0
 for i=1,#laser_puz do
 	for j=1,#laser_puz[1] do	
			spr(laser_puz[i][j],x,y)
 		x+= 8
 	end
 	x =64-((#laser_puz[1]/2)*8)
 	y+= 8
 end
 palt(0,false)
	palt(14,true)
	rectfill(0,0,18,8,1)
	rect(0,0,18,8,0)
	spr(sel.color,64-((#laser_puz[1]/2)*8)+flr(8*(sel.x-1)),(8*(sel.y-1)))
	draw_cons()
end

function draw_cons()
	rect(2,85,127,127,7)
	print(
	"❎: select / deselect\n"..
	"⬅️⬇️⬆️➡️: move\n\n"..
	"connect wires ".. 
	"to restore power\n\n"..
	"z: exit",4,88,7) 
end

function laser_con()
	--layout controls for laser puzzle--
	if btnp(0) then
		if sel.color != 213 then
			laser_map("left",laser_puz)
			sel.dir = "left"
		end	
		sel.x -= 1
		if wall_check(sel.x,sel.y,laser_puz) then
		 sel.x+= 1
		end
		if puz_win() then
			lights = true
			state = 4
		else
			lights = false
		end
	end
	if btnp(1) then
		if sel.color != 213 then
			laser_map("right",laser_puz)
			sel.dir = "right"
		end	
		sel.x += 1
		if wall_check(sel.x,sel.y,laser_puz) then
		 sel.x -= 1
		end
		if puz_win() then
			lights = true
			state = 4
		else
			lights = false
		end
	end
	if btnp(2) then
		if sel.color != 213 then
			laser_map("up",laser_puz)
			sel.dir = "up"
		end	
		sel.y -= 1
		if wall_check(sel.x,sel.y,laser_puz) then
		 sel.y+= 1
		end
		if puz_win() then
			lights = true
			state = 4
		else
			lights = false
		end
	end
	if btnp(3)	then
		if sel.color != 213 then
			laser_map("down",laser_puz)
			sel.dir = "down"
		end	
		sel.y += 1
		if wall_check(sel.x,sel.y,laser_puz) then
		 sel.y-= 1
		end
		if puz_win() then
			lights = true
			state = 4
		else
			lights = false
		end
	end
	if btnp(4) then
		state = 4
	end
	if btnp(5) then
		if sel.color != 213 then
			sel.color = 213
		elseif laser_puz[sel.y][sel.x]== 214 then
			if sel.color != 221 then
				sel.color = 221
			end
		elseif laser_puz[sel.y][sel.x]== 246 then
			if sel.color != 253 then
				sel.color = 253
			end
		elseif laser_puz[sel.y][sel.x]== 198 then
			if sel.color != 205 then
				sel.color = 205
			end
		elseif laser_puz[sel.y][sel.x]== 230 then
			if sel.color != 237 then
				sel.color = 237
			end
		end
	end		 
end

function wall_check(x,y,l)
	if x < 1 or x > #l[1] then
	 return true
	end
	if y < 1 or y > #l then
	return true
	end
	return false
end

function laser_map(d,l)
	if sel.color == 221 then
		lr = 215
		ud = 216
		ld = 217
		rd = 218
		ru = 219
		lu = 220
	elseif sel.color == 237 then
		lr = 231
		ud = 232
		ld = 233
		rd = 234
		ru = 235
		lu = 236
	elseif sel.color == 205 then
		lr = 199
		ud = 200
		ld = 201
		rd = 202
		ru = 203
		lu = 204
	elseif sel.color == 253 then
		lr = 247
		ud = 248
		ld = 249
		rd = 250
		ru = 251
		lu = 252
	end
	if l[sel.y][sel.x]!= 214 and l[sel.y][sel.x]!= 198 and l[sel.y][sel.x]!= 246 and  l[sel.y][sel.x]!= 230  then
		if d == "up" then
			if sel.dir == "left" then
				l[sel.y][sel.x] = ru
			elseif sel.dir == "right" then
				l[sel.y][sel.x] = lu
			else
				l[sel.y][sel.x] = ud
			end
		elseif d == "down" then
			if sel.dir == "left" then
				l[sel.y][sel.x] = rd
			elseif sel.dir == "right" then
				l[sel.y][sel.x] = ld
			else
				l[sel.y][sel.x] = ud
			end
		elseif d == "left" then
			if sel.dir == "up" then
				l[sel.y][sel.x] = ld
			elseif sel.dir == "down" then
				l[sel.y][sel.x] = lu
			else
				l[sel.y][sel.x] = lr
			end
		elseif d=="right" then
			if sel.dir == "up" then
				l[sel.y][sel.x] = rd
			elseif sel.dir == "down" then
				l[sel.y][sel.x] = ru
			else
				l[sel.y][sel.x] = lr
			end
		end
	end
end

function puz_win()
	x =64-((#laser_puz[1]/2)*8)
 y = 0
 num_cor = 0
 for i=1,#laser_puz do
 	for j=1,#laser_puz[1] do	
			if laser_puz[i][j] == puz_ans[i][j] then
				num_cor +=1
			end
 	end
 	x =64-((#laser_puz[1]/2)*8)
 	y+= 8
 end
 if num_cor == 50 then
 	return true
 else
 	return false
 end
end
-->8
--other stuff--
--generic draw room function that displays 2-d array of sprites
function draw_room(room)
 x =64-((#room[1]/2)*8)
 y = 0
 for i=1,#room do
 	for j=1,#room[1] do
 	if not lights and state<5 then
 		if state !=4 then
 			for i=2,15 do
					pal(i,1)
				end
			else
					pal(8,1)
					pal(7,1)
					pal(3,1)
					pal(6,1)
					pal(11,1)
					pal(12,1)
					pal(13,1)
			end
			pal(1,0)
			pal(5,0)
			pal(2,0)
		else
			pal()
			palt(0,false)
			palt(14,true)
		end		
			spr(room[i][j],x,y)
 		x+= 8
 	end
 	x =64-((#room[1]/2)*8)
 	y+= 8
 end
 pal()
 palt(0,false)
	palt(14,true)
	rectfill(0,0,18,8,1)
	rect(0,0,18,8,0)
 spr(p_spr,64-((#room[1]/2)*8)+flr(8*(p_x-1)),flr(8*(p_y-1))-4)
end

--returns sprite number of tile player is facing, if player is facing boundary, return -1
function tile_facing()
	local room

	if state == 1 then
		room = mainroom
	elseif(state==2) then
	 room=labroom
	elseif state == 4 then
		room=mechroom
	elseif state ==3 then
		room= servroom
	elseif state >= 5 then
		return -1
	end
	local p_x = flr(p_x+0.5)
	local p_y = flr(p_y+0.5)
	if p_dir==76 then
		if(p_y+1>#room) return -1
		return room[p_y+1][p_x]
	elseif p_dir==77 then
		if(p_y-1<1) return -1
		return room[p_y-1][p_x]
	elseif p_dir==78 then
		if(p_x-1<1) return -1
		return room[p_y][p_x-1]
	elseif p_dir==79 then
		if(p_x+1>#room[1]) return -1
		return room[p_y][p_x+1]
	end
end

--returns sprite number of tile player is standing on
function tile_standing()
	local room
	if state == 1 then
		room = mainroom
	elseif(state==2) then
		room=labroom
	elseif state == 4 then
		room=mechroom
	elseif state == 3 then
		room= servroom
	elseif state >=5 then
		return -1
	end
	local p_x = flr(p_x+0.5)
	local p_y = flr(p_y+0.5)
	return room[p_y][p_x]
end

--update player moving
function player_move()
    if not p_moving then
        p_spr=p_dir
        local dx,dy = 0,0
        if(btn(0)) dx-=1
        if(btn(1)) dx+=1
        if(btn(2)) dy-=1
        if(btn(3)) dy+=1
        if(dx~=0) dy=0
        if dx~=0 or dy~=0 then
            if(dx==-1) p_dir=78
            if(dx==1) p_dir=79
            if(dy==-1) p_dir=77
            if(dy==1) p_dir=76
            p_spr=p_dir
            p_dx=dx
            p_dy=dy
            p_movecounter=0
            p_walkanimation=1-p_walkanimation
            p_moving=true
            if(tile_facing()==-1 or fget(tile_facing(),0)) then --collision
				door_check()
                p_dx=0
                p_dy=0
            end
        end
    end
	if p_moving then
		p_movecounter+=1
		p_x+=0.125*p_dx
		p_y+=0.125*p_dy
		if(p_movecounter==2) then
			p_spr=16*(p_walkanimation+1)+p_dir
		end
		if(p_movecounter==8) then
			p_spr=p_dir
			p_moving=false
			p_dx=0
			p_dy=0
		end
	end
end

function inv_display()
	--key item
	rect(2,116,11,125,10)
	if(curr_key_item~=-1) spr(curr_key_item,3,117)
	--puzzle pieces
	local x = 14
	for p,n in pairs(collected_pieces) do
		rect(x,116,x+9,125,7)
		spr(n,x+1,117)
		x+=9
	end
end

--move between different rooms via door
function door_check()
	local t = tile_standing()
	if (t>=101 and t<=103) or t == 33 or t == 34 or t == 87 or t == 88 then
		if state== 1 then
			if	t == 101 then
				state = 3
				p_x=1
				p_y=8
			elseif t == 102 then
				state = 4
				p_x=5
				p_y=5
			elseif t == 33 and lights then
				state = 2
				p_x=4
				p_y=2
			elseif t == 34 and lights then
				state = 2
				p_x=5
				p_y=2
			end								
		elseif state==2 then
			state = 1
			p_y=15
			if t == 87 then
				p_x=8
			elseif t == 88 then
				p_x=9
			end
		elseif state==4 then
			state=1
			p_x=1
			p_y=7
		elseif state==3 then
			state=1
			p_x=16
			p_y=7
		end
	end
end

function puzzle_select()
	local til = tile_facing()
	local stan = tile_standing()
	if state == 1 then
		if (til >= 6 and til <= 8) or (til >= 22 and til <= 24) then
			print("this would be a\n"..
			"puzzle",55,115,7)
		elseif(stan == 35 or stan == 51) then
			print("this would be a\n"..
			"puzzle",55,115,7)
		end
	elseif state == 2 then
		if til >= 112 and til <= 117 then
			state = 8
		end
	elseif state == 3 then
		if til == 153 or til == 136 then
			print("this would be a\n"..
			"puzzle",55,110,7)
		end
	elseif state == 4 then
		if til == 209 then
			if not lights then
				state = 7
			else
				print("power is already\nrestored",55,110,7)
			end
		end
	end
end


function add_inventory()
	if state == 1 and d == false then
		if (tile_facing() >= 6 and tile_facing() <= 8) or (tile_facing() >= 22 and tile_facing() <= 24) then
			add(collected_pieces,124)
			d = true
		end
	elseif state == 2 and j== false then
		if tile_facing() >= 84 and tile_facing() <= 86  then
			add(collected_pieces,127)
			j = true
		end
	elseif state == 3 and c == false then
		if tile_facing() == 136 then
			add(collected_pieces,126)
			c = true
		end
	elseif state == 4 and z==false then
		if tile_facing() == 210 or tile_facing() == 211 then
			add(collected_pieces,125)
			z= true
		end
	end
end

function win_check()
	if tile_facing() == 36 or tile_facing() == 37 then
		if z and j and d and c then
			set = time()
			state = 5
		else
			print("door is locked",55,120,7)
		end
	end
end

function game_timer()
	t = time()-start_time
	mins = flr(t/60)
	secs = flr(t%60)
	
	if secs <10 then
	 game_time = mins..":0"..secs
	else
		game_time = mins..":"..secs
	end
	
	return game_time
end
	


		
-->8
--intro/outtro code--
function intro_draw()
	cls(5)
	print("the next experiment",hcenter("the next experiment"),10,2)
	print("you have been taken and are now ",hcenter("you have been taken and are now"),30,6)
	print("trapped inside a dark castle",hcenter("trapped	inside a dark castle"),40,6)
	print("figure out how to escape",hcenter("figure out how to escape"),50,6)
	print("press ❎ to begin",hcenter("press ❎ to begin"),100,6)
	i = 112
	a = 1
	x = 0
	while a <= 18 do
		spr(i,x,120)
		x+= 8
		i += 1
		if i > 116 then
			i = 112
		end
		a+= 1
	end
end

winroom = {
	{1,2,1,2,1,2,1,4,5,2,1,2,1,2,1,2},
	{17,18,17,18,17,18,17,20,21,18,17,18,17,18,17,18},
	{3,3,3,3,3,3,3,36,37,3,3,3,3,3,3,3},
	{19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
	{102,19,19,19,19,19,19,19,19,19,19,19,19,19,19,101},
	{19,19,19,19,19,19,19,6,7,8,19,19,19,19,19,19},
	{19,19,19,19,19,19,19,22,23,24,19,19,19,19,19,19},
	{19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
	{35,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
	{51,19,19,19,19,19,19,19,19,19,19,19,19,19,19,25},
	{19,19,19,19,19,19,19,19,19,19,19,19,38,39,40,41},
	{19,19,19,19,19,19,19,19,19,19,19,19,54,55,56,41},
	{19,19,19,19,19,19,19,33,34,19,19,19,19,19,19,57},
	{19,19,19,19,19,19,19,49,50,19,19,19,19,19,19,19}
}
function win_draw()
	if time()-set <= 6 then
		win_animation()
		draw_room(winroom)
		print(runtime,2,2,7)
	else
		cls(5)
		print("runtime: "..runtime,hcenter("runtime: "..runtime),50,12)
		print("you have escaped",hcenter("you have escaped"),60,12)
		print("press ❎ to play again",hcenter("press ❎ to play again"),70,12)
	
		i = 112
		a = 1
		x = 0
		while a <= 18 do
			spr(i,x,120)
			x+= 8
			i += 1
			if i > 116 then
				i = 112
			end
			a+= 1
		end
	end
end	

function win_animation()
	if time()-set >= 1 then 
		winroom[1][8] = 240
	end
	if time()-set >= 2 then
		winroom[1][9] = 241
	end
	if time()-set >= 3 then
		winroom[3][8] = 242
	end
	if time()-set >= 4 then
		winroom[3][9] = 243
	end
	
	if time()-set >= 5 then
		winroom[1][8] = 226
		winroom[1][9] = 227
		winroom[2][8] = 228
		winroom[2][9] = 229
		winroom[3][8] = 244
		winroom[3][9] = 245
	end
end


function hcenter(s)
  return 64-#s*2
end
__gfx__
00000000d1111111d111111122222222222222222222222255599999989998999999955500000000000000000000000000000000000000000000000000000000
00000000111dd1111111dd1124442444244444444444444255922222882228822222295500000000000000000000000000000000000000000000000000000000
0070070011d11d11111d11d124442444245225444452254259244444443434444444429500000000000000000000000000000000000000000000000000000000
00077000d11dd111d111dd1124442444242552444425524292444444446667444444442900000000000000000000000000000000000000000000000000000000
000770001111111d1d11111124442444242552444425524292444444446667444444442900000000000000000000000000000000000000000000000000000000
00700700d1111111d111111124442444245225444452254292444444446766444444442900000000000000000000000000000000000000000000000000000000
00000000111dd1111111dd1124442444244444444444444292444444446766444444442900000000000000000000000000000000000000000000000000000000
0000000011d11d11111d11d122222222244444444444444292444444484dd4484444442900000000000000000000000000000000000000000000000000000000
0000000011dd11111111dd1155555555244444444444444292444444444444444444442955559999000000000000000000000000000000000000000000000000
000000001111111dd111111155555555244444444444444292444444444444444444442955229444000000000000000000000000000000000000000000000000
00000000111111d11d11111155555555244444944944444292244444444444444444422955229444000000000000000000000000000000000000000000000000
0000000011dd111dd111dd1155555555244449444494444259924444444444444444299555229444000000000000000000000000000000000000000000000000
000000001d11d111111d11d155555555244449444494444255599999999999999999955555229444000000000000000000000000000000000000000000000000
0000000011dd11111111dd1155555555244449444494444255552222222222222222555555249444000000000000000000000000000000000000000000000000
000000001111111dd111111155555555244444944944444255552244444444444422555555249444000000000000000000000000000000000000000000000000
00000000111111d11d11111155555555244444444444444255522244455555544422255555249444000000000000000000000000000000000000000000000000
00000000000000000000000055555555244444444444444255555777655555555556666555500444000000000000000000000000000000000000000000000000
00000000055555555555555055555555244444444444444255550777666777777766776555500444000000000000000000000000000000000000000000000000
00000000055555555555555045555555245225444452254255555066677777777777776555500444000000000000000000000000000000000000000000000000
00000000055555555555555046555555242552444425524255555777677777777777765555500444000000000000000000000000000000000000000000000000
000000000000000000000000465555552425524444255242557777f7777777777777755555500444000000000000000000000000000000000000000000000000
00000000001111111111110047555555245225444452254255707777677777777777755555500444000000000000000000000000000000000000000000000000
00000000005555555555550046555555244444444444444207777777767777777777775555500444000000000000000000000000000000000000000000000000
00000000005555555555550046555555222222222222222277777777677777777777775555500444000000000000000000000000000000000000000000000000
00000000000000000000000047555555000000000000000077777777667777777777777555249444000000000000000000000000000000000000000000000000
00000000010111111111101047555555000000000000000055555555667776666667777555249444000000000000000000000000000000000000000000000000
00000000010555555555501046555555000000000000000055555555677776555566777755249444000000000000000000000000000000000000000000000000
00000000010000000000001046555555000000000000000055555506777775555556677755249444000000000000000000000000000000000000000000000000
00000000010011111111001045555555000000000000000055555556777755555555677755229444000000000000000000000000000000000000000000000000
00000000001011111111010055555555000000000000000055555507777555555555577555229444000000000000000000000000000000000000000000000000
00000000000000000000000055555555000000000000000055555550775555555555555555229444000000000000000000000000000000000000000000000000
00000000000000000000000055555555000000000000000055555555555555555555555555559999000000000000000000000000000000000000000000000000
5555555555555555555555555555555599999999999999999999999900000000000000001177eeee1177eeee00000000ee4444eeee4444eee44444eeee44444e
5557775555777555555575555557555599999999999999999999999900000000000000001177eeee11771eee00000000e444444ee444444ee444444ee444444e
5557775555777555555575555557555599000000000000000000009900000000000000001177eeee1177eeee00000000e4ffff4ee4ffff4eeffff44ee44ffffe
5551115555111555555bbb5555bbb5559900000000000000000000990010111111110100eeeeeeeeeeeeeeee00000000ef0ff0feeffffffeef0ffffeeffff0fe
5551115555111555555bbb5555bbb5559900070700000700077000990100111111110010eeee777eeeee777e00000000effffffeeffffffeefff888ee888fffe
550000000000005555000000000000559900007070007070000700990100000000000010eeee766eeeee766e00000000ed8878deed8888deeee8788ee8878eee
559999999999995555999999999999559900000000000000000000990105555555555010eeee777eeeee777e00000000ee8888eeee8888eeeee8d88ee88d8eee
559555555555595555955555555559559900000000000000000000990101111111111010eeee777eeeee777e00000000ee6ee6eeee6ee6eeee666eeeeee666ee
5555555555555555555555555555555599000707000070000770009900000000000000001177eeee1777eeee00000000ee4444eeee4444eee44444eeee44444e
55577755557775555555755555575555990000700070070070000099005555555555550011771eee17771eee00000000e444444ee444444ee444444ee444444e
5557775555777555555575555557555599000000000000000000009900555555555555001177e1ee1777e1ee00000000e4ffff4ee4ffff4eeffff44ee44ffffe
5558885555888555555ccc5555ccc5559999999999999999999999990011111111111100eeeeeeeeeeeee1ee00000000ef0ff0feeffffffeef0ffffeeffff0fe
5558885555888555555ccc5555ccc5559999999999999999999999990000000000000000eeee777eeeee777e00000000effffffeeffffffeefff888ee888fffe
550000000000005555000000000000559955555555555555555555990555555555555550eeee766eeeee766e00000000eed878deed888deeeee8788ee8878eee
559999999999995555999999999999559955555555555555555555990555555555555550eeee777eeeee777e00000000ee8888eeee8888eeeed8d88ee88d8dee
559555555555595555955555555559559955555555555555555555990555555555555550eeee777eeeee111e00000000eeeee6eeeeeee6eeee66eeeeeeee66ee
5555555555555555555555555555555500000000556666666666665567777776eeeeeeee7777eeeeeeeeeeee00000000ee4444eeee4444eee44444eeee44444e
5557775555777555555575555557555500777700567777777777776567777776eeeeeeee77771eeeeeeeeeee00000000e444444ee444444ee444444ee444444e
5557775555777555555575555557555507777770677777777777777667777776eeeeeeee7777e1eeeeeeeeee00000000e4ffff4ee4ffff4eeffff44ee44ffffe
555ddd5555ddd555555aaa5555aaa55507777770677777777777777667777776eeeeeeeeeeeee1eeeeeeeeee00000000ef0ff0feeffffffeef0ffffeeffff0fe
555ddd5555ddd555555aaa5555aaa55507777770677777777777777667777776eeee777eeeee777eeeee777e00000000effffffeeffffffeefff888ee888fffe
5500000000000055550000000000005507777770677777777777777667777776eeee766eeeee766eeeee766e00000000ed887deeeed888deeed8d88ee88d8dee
5599999999999955559999999999995500777700567777777777776556777765eeee777eeeee111eeeeefffe00000000ee8888eeee8888eeeee8788ee8878eee
5595555555555955559555555555595500000000556666666666665555666655eeee777eeeee111eeeeefffe00000000ee6eeeeeee6eeeeeeeee66eeee66eeee
555555555555555555555555555555555555555555555555777777707777777077777770777777707777777077777770eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
557775577755575555755577755575555555777555555555777777707777777077777770777777707777777077777770ee666eeeee6666eeee6666eeee6666ee
557775577755575555755577755575557575766555566555777777707777777077777770777777707777777077777770ee6ee6eeeeeee6eeee6eeeeeeeee6eee
551115588855ccc55aaa55ddd55bbb557575777555565555777777707777777077777770777777707777777077777770ee6ee6eeeeee6eeeee6eeeeeeeee6eee
551115588855ccc55aaa55ddd55bbb5575757775565656551111111088888880ccccccc0aaaaaaa0ddddddd0bbbbbbb0ee6ee6eeeee6eeeeee6eeeeeeeee6eee
0000000000000000000000000000000000000000000000001111111088888880ccccccc0aaaaaaa0ddddddd0bbbbbbb0ee6ee6eeee6eeeeeee6eeeeeee6e6eee
9999999999999999999999999999999999999999999999991111111088888880ccccccc0aaaaaaa0ddddddd0bbbbbbb0ee666eeeee6666eeee6666eeee666eee
9999999999999999999999999999999999999999999999991111111088888880ccccccc0aaaaaaa0ddddddd0bbbbbbb0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
44477745444444448888888844444444444444444444444449999964777777777777776744444444eee999998888888888888888444444455555455555555544
44779775444444448888888844444444444444444444444429222584777777777777776744444444eee999998888888888888888444444452222455555554444
47777777444444448888888899999999444444444444444429226664666666667777776799999994eee9999988888888888888884444444a2552455555444444
4a77777a444444448888888899999999fff7777777777fff29226664600660067777776799999994eee99999888888888888888822222225bbbb455555444444
4999599a444444448888888899999999fff7777777777fff292225c4600660067777776799999994eee99999844888888888844822222225bbbb455554444444
44955595222222228888888899999999fff7777777777fff29222564666666667777777799999994eee44444844dddddddddd442222222252222255554444444
44499945225555228888888899999999fff6666666666fff29999994600660067777777799999994ee744444244dddddddddd442222222252bbb255554444444
44444445225aa5228888888899999999ffffffffffffffff29999994600660067777777799999994eee44444244dddddddddd4425dd5dd552555255554444444
4455555554444444444444455555555544444444ee99999454444444dddddddd4444444555555544111111111111111122555522111111117777777700000000
4444555554444444444444455555555542222224ee99999454444444d000000d44444445666776641a1111a11a1111a1222222221a1111a17777776700000000
4444445555444444444444555555555542744724ee99999474444444d000000d444444455667746611a11a1111a11a1122eeee2211a11a117777555500000000
4444445555544444444455555555555542444424ee99999454444444dddddddd44444445567774461111111111111111eeeeeeee111111117777976700000000
4444444555555444445555555555555542444424ee99999454444444d000000d4444444a56ccc74611a11a1111a11a11eeeeeeee666666667777777700000000
4444444555555552255555555555555542444424ee99999454444444d000000d444444456c77cc661a1111a11a1111a1eeeeeeee666666666666666600000000
4444444555555222222555555555555542222224ee99999454444444d000000d444444456c7ccc641111111111111111eeeeeeee666666667777777700000000
4444444555555222222555555555555522222222ee99999454444444222222224444444556ccc6441111111144444444eeeeeeee666666667777777700000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1dd1dd1d1dd1dd1dd1552d2dd2dd2011555555555555555555333355555555555553355555555555555555555553355555533555333333330000000000000000
111111111111111111552222222200005555555555535555533333355555555555533555555555555555555555533555555335553eeeeee30000000000000000
d1dd1dd1d1dd1dd1dd55d2d2dd21101055555b555555355b333333335555555555533555555555555555555555533555555335553eeeeee30000000000000000
111111111111111111552222220000005555553b553b535b333333333333333355533555333335555553333355533333333335553eeeeee30000000000000000
1d1dd1dd1555555d1d55dd2d2d10101155553555b5553353333333333333333355533555333335555553333355533333333335553eeeeee30000000000000000
1111111115553351115555555555000055355355333b3b3b333333335555555555533555555335555553355555555555555555553eeeeee30000000000000000
d1d1dd1dd533555dd2555500005501105553353b33b33333533333355555555555533555555335555553355555555555555555553eeeeee30000000000000000
1111111115558851122255000055000053b3bb33b33b3b3355333355555555555553355555533555555335555555555555555555333333330000000000000000
555555551588555dd2dd5555555511015dddddd57777777755888855555555555558855555555555555555555558855555588555888888880000000000000000
555555551555cc512225555555555000dccccccd7eeeeee7588888855555555555588555555555555555555555588555555885558eeeeee80000000000000000
55555555d5cc5551dd25508888055010ddccccdd7eeeeee7888888885555555555588555555555555555555555588555555885558eeeeee80000000000000000
55555555155555512225588998855555d6dccd6d7eeeeee7888888888888888855588555888885555558888855588888888885558eeeeee80000000000000000
555555551d1dd1dd2dd5589999855555d66dd66d7eeeeee7888888888888888855588555888885555558888855588888888885558eeeeee80000000000000000
555555551111111122255555555550005d6666d57eeeeee7888888885555555555588555555885555558855555555555555555558eeeeee80000000000000000
55555555d1d1dd1dd2d55110101551105d6666d57eeeeee7588888855555555555588555555885555558855555555555555555558eeeeee80000000000000000
5555555511111111222550000005500055dddd557777777755888855555555555558855555588555555885555555555555555555888888880000000000000000
555229aaaa9222552222222002222222244444400444444255cccc5555555555555cc5555555555555555555555cc555555cc555cccccccc0000000000000000
555229aaa9922255244444400444444224444440044444425cccccc555555555555cc5555555555555555555555cc555555cc555ceeeeeec0000000000000000
25229aaa9922225524222740042227422444449009444442cccccccc55555555555cc5555555555555555555555cc555555cc555ceeeeeec0000000000000000
529999999222255524277240042777422444494004944442cccccccccccccccc555cc555ccccc555555ccccc555cccccccccc555ceeeeeec0000000000000000
522999292225555524277240042777422444494004944442cccccccccccccccc555cc555ccccc555555ccccc555cccccccccc555ceeeeeec0000000000000000
222922222555555524222740042227422444494004944442cccccccc55555555555cc555555cc555555cc5555555555555555555ceeeeeec0000000000000000
5522222255555555244444400444444224444490094444425cccccc555555555555cc555555cc555555cc5555555555555555555ceeeeeec0000000000000000
55255525555555552444444004444442244444400444444255cccc5555555555555cc555555cc555555cc5555555555555555555cccccccc0000000000000000
22222222222222222444444444444442244444400444444255999955555555555559955555555555555555555559955555599555999999990000000000000000
244444444444444224444444444444422444444004444442599999955555555555599555555555555555555555599555555995559eeeeee90000000000000000
242227444422274224222244442227422422224004222742999999995555555555599555555555555555555555599555555995559eeeeee90000000000000000
242772444427774224772744447727422477274004772742999999999999999955599555999995555559999955599999999995559eeeeee90000000000000000
242772444427774224772744447277422477274004727742999999999999999955599555999995555559999955599999999995559eeeeee90000000000000000
242227444422274224222744447222422422274004722242999999995555555555599555555995555559955555555555555555559eeeeee90000000000000000
244444444444444224444444444444422444444004444442599999955555555555599555555995555559955555555555555555559eeeeee90000000000000000
24444444444444422222222222222222222222200222222255999955555555555559955555599555555995555555555555555555999999990000000000000000
__gff__
0001010101010101010000000000000000010100010101010101000000000000000000000101000000010000000000000001010000000000000100000000000001010101010101010100000000000000010101010101010000000000000000000101010101000000000000000000000001010101010100000000000000000000
0101010101010101010101010101010101010100010101010101010101010101000000000000000000000000000000000000000000000000000000000000000001010101000000000000000000000000000101010100000000000000000000000000010101010000000000000000000001010101010100000000000000000000
